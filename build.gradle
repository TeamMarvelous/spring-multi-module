buildscript {
	ext {
		springBootVersion = '2.4.5'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:2.4.5"
		classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.restful'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '1.8'

	repositories {
		mavenCentral()
	}

	// 서브 모듈에 공통으로 의존성을 추가 시킬 디펜던시를 정의합니다.
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
		implementation 'com.h2database:h2'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.security:spring-security-test'
	}

	// 해당 task로 서브 모듈 추가시 기초적인 디렉토리를 자동으로 생성해줍니다.
	task initSourceFolders {
		sourceSets*.java.srcDirs*.each {
			if (!it.exists()) {
				it.mkdirs()
			}
		}

		sourceSets*.resources.srcDirs*.each {
			if (!it.exists()) {
				it.mkdirs()
			}
		}
	}

}

project(':db-connection') {
	dependencies {
		compile 'org.springframework.boot:spring-boot-starter-data-jpa'
		compile('org.springframework.boot:spring-boot-starter-web')
	}
}

project(':app-api') {
	dependencies {
		compile project(':db-connection')
	}
}

project(':web-core') {
	dependencies {
		compile project(':app-api')
	}
}